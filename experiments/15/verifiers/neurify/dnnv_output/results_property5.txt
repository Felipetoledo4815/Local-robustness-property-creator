DEBUG    2021-05-10 20:56:26,100 (dnnv) Reading property generated_properties/property5.py
Verifying property:
Forall(x_0, (((0 <= x_0) & ([[[0.118 0.161 ... 0.996 1.  ] [0.314 0.192 ... 0.996 0.992] ... [0.043 0.047 ... 0.149 0.18 ] [0.043 0.047 ... 0.086 0.157]] [[0.118 0.09 ... 1.  0.996] [0.439 0.306 ... 1.  1.  ] ... [0.063 0.067 ... 0.173 0.204] [0.063 0.067 ... 0.102 0.173]] [[0.11 0.145 ... 0.992 1.  ] [0.604 0.455 ... 1.  1.  ] ... [0.086 0.09 ... 0.22 0.259] [0.086 0.09 ... 0.145 0.22 ]]] <= x_0) & (x_0 <= 1) & (x_0 <= [[[0.118 0.161 ... 0.996 1.  ] [0.314 0.192 ... 0.996 0.992] ... [0.043 0.047 ... 0.149 0.18 ] [0.043 0.047 ... 0.086 0.157]] [[0.118 0.09 ... 1.  0.996] [0.439 0.306 ... 1.  1.  ] ... [0.063 0.067 ... 0.173 0.204] [0.063 0.067 ... 0.102 0.173]] [[0.11 0.145 ... 0.992 1.  ] [0.604 0.455 ... 1.  1.  ] ... [0.086 0.09 ... 0.22 0.259] [0.086 0.09 ... 0.145 0.22 ]]])) ==> ((numpy.tan(max(-1.5707963267948966, ((N[0:]([[[[0.118 0.161 ... 0.996 1.  ]  [0.314 0.192 ... 0.996 0.992]  ...  [0.043 0.047 ... 0.149 0.18 ]  [0.043 0.047 ... 0.086 0.157]] [[0.118 0.09 ... 1.  0.996]  [0.439 0.306 ... 1.  1.  ]  ...  [0.063 0.067 ... 0.173 0.204]  [0.063 0.067 ... 0.102 0.173]] [[0.11 0.145 ... 0.992 1.  ]  [0.604 0.455 ... 1.  1.  ]  ...  [0.086 0.09 ... 0.22 0.259]  [0.086 0.09 ... 0.145 0.22 ]]]]) - ((3.141592653589793 * 15.0) / 180)) / 2))) < N[0:-2](x_0)) & (N[0:-2](x_0) < numpy.tan(min(1.5707963267948966, ((N[0:]([[[[0.118 0.161 ... 0.996 1.  ]  [0.314 0.192 ... 0.996 0.992]  ...  [0.043 0.047 ... 0.149 0.18 ]  [0.043 0.047 ... 0.086 0.157]] [[0.118 0.09 ... 1.  0.996]  [0.439 0.306 ... 1.  1.  ]  ...  [0.063 0.067 ... 0.173 0.204]  [0.063 0.067 ... 0.102 0.173]] [[0.11 0.145 ... 0.992 1.  ]  [0.604 0.455 ... 1.  1.  ]  ...  [0.086 0.09 ... 0.22 0.259]  [0.086 0.09 ... 0.145 0.22 ]]]]) + ((3.141592653589793 * 15.0) / 180)) / 2)))))))

Verifying Networks:
N:
DEBUG    2021-05-10 20:56:26,128 (dnnv) Parsing network (onnx/dave_small.onnx)
DEBUG    2021-05-10 20:56:26,131 (dnnv.nn.parser.onnx)   1: Conv
DEBUG    2021-05-10 20:56:26,131 (dnnv.nn.parser.onnx)   2: Relu
DEBUG    2021-05-10 20:56:26,131 (dnnv.nn.parser.onnx)   3: Conv
DEBUG    2021-05-10 20:56:26,131 (dnnv.nn.parser.onnx)   4: Relu
DEBUG    2021-05-10 20:56:26,131 (dnnv.nn.parser.onnx)   5: Transpose
DEBUG    2021-05-10 20:56:26,131 (dnnv.nn.parser.onnx)   6: Flatten
DEBUG    2021-05-10 20:56:26,132 (dnnv.nn.parser.onnx)   7: Gemm
DEBUG    2021-05-10 20:56:26,132 (dnnv.nn.parser.onnx)   8: Relu
DEBUG    2021-05-10 20:56:26,132 (dnnv.nn.parser.onnx)   9: Gemm
DEBUG    2021-05-10 20:56:26,132 (dnnv.nn.parser.onnx)  10: Atan
DEBUG    2021-05-10 20:56:26,132 (dnnv.nn.parser.onnx)  11: Mul
Input_0                         : Input([  1   3 100 100], dtype=float32)
Conv_0                          : Conv(Input_0, kernel_shape=[5, 5], strides=[5, 5], pads=[0, 0, 0, 0])
Relu_0                          : Relu(Conv_0)
Conv_1                          : Conv(Relu_0, kernel_shape=[5, 5], strides=[5, 5], pads=[0, 0, 0, 0])
Relu_1                          : Relu(Conv_1)
Transpose_0                     : Transpose(Relu_1, permutation=[0 2 3 1])
Flatten_0                       : Flatten(Transpose_0, axis=1)
Gemm_0                          : Gemm(Flatten_0, ndarray(shape=(100, 576)), ndarray(shape=(100,)))
Relu_2                          : Relu(Gemm_0)
Gemm_1                          : Gemm(Relu_2, ndarray(shape=(1, 100)), [-0.00807803])
Atan_0                          : Atan(Gemm_1)
Mul_0                           : Mul(Atan_0, 2.0)

DEBUG    2021-05-10 20:56:26,298 (dnnv.verifiers.common.reductions.iopolytope) DNF: (((((-1 * x_0)) <= 0) & (((1 * x_0)) <= [[[0.118 0.161 ... 0.996 1.  ] [0.314 0.192 ... 0.996 0.992] ... [0.043 0.047 ... 0.149 0.18 ] [0.043 0.047 ... 0.086 0.157]] [[0.118 0.09 ... 1.  0.996] [0.439 0.306 ... 1.  1.  ] ... [0.063 0.067 ... 0.173 0.204] [0.063 0.067 ... 0.102 0.173]] [[0.11 0.145 ... 0.992 1.  ] [0.604 0.455 ... 1.  1.  ] ... [0.086 0.09 ... 0.22 0.259] [0.086 0.09 ... 0.145 0.22 ]]]) & (((-1 * N[0:-2](x_0))) <= [[-0.154]]) & (((1 * x_0)) <= 1) & (((-1 * x_0)) <= [[[-0.118 -0.161 ... -0.996 -1.  ] [-0.314 -0.192 ... -0.996 -0.992] ... [-0.043 -0.047 ... -0.149 -0.18 ] [-0.043 -0.047 ... -0.086 -0.157]] [[-0.118 -0.09 ... -1.  -0.996] [-0.439 -0.306 ... -1.  -1.  ] ... [-0.063 -0.067 ... -0.173 -0.204] [-0.063 -0.067 ... -0.102 -0.173]] [[-0.11 -0.145 ... -0.992 -1.  ] [-0.604 -0.455 ... -1.  -1.  ] ... [-0.086 -0.09 ... -0.22 -0.259] [-0.086 -0.09 ... -0.145 -0.22 ]]])) | ((((-1 * x_0)) <= 0) & (((1 * N[0:-2](x_0))) <= [[-0.109]]) & (((1 * x_0)) <= [[[0.118 0.161 ... 0.996 1.  ] [0.314 0.192 ... 0.996 0.992] ... [0.043 0.047 ... 0.149 0.18 ] [0.043 0.047 ... 0.086 0.157]] [[0.118 0.09 ... 1.  0.996] [0.439 0.306 ... 1.  1.  ] ... [0.063 0.067 ... 0.173 0.204] [0.063 0.067 ... 0.102 0.173]] [[0.11 0.145 ... 0.992 1.  ] [0.604 0.455 ... 1.  1.  ] ... [0.086 0.09 ... 0.22 0.259] [0.086 0.09 ... 0.145 0.22 ]]]) & (((1 * x_0)) <= 1) & (((-1 * x_0)) <= [[[-0.118 -0.161 ... -0.996 -1.  ] [-0.314 -0.192 ... -0.996 -0.992] ... [-0.043 -0.047 ... -0.149 -0.18 ] [-0.043 -0.047 ... -0.086 -0.157]] [[-0.118 -0.09 ... -1.  -0.996] [-0.439 -0.306 ... -1.  -1.  ] ... [-0.063 -0.067 ... -0.173 -0.204] [-0.063 -0.067 ... -0.102 -0.173]] [[-0.11 -0.145 ... -0.992 -1.  ] [-0.604 -0.455 ... -1.  -1.  ] ... [-0.086 -0.09 ... -0.22 -0.259] [-0.086 -0.09 ... -0.145 -0.22 ]]])))
INFO     2021-05-10 20:56:26,300 (dnnv.verifiers.common.reductions.iopolytope) CONJUNCTION: ((((-1 * x_0)) <= 0) & (((1 * x_0)) <= [[[0.118 0.161 ... 0.996 1.  ] [0.314 0.192 ... 0.996 0.992] ... [0.043 0.047 ... 0.149 0.18 ] [0.043 0.047 ... 0.086 0.157]] [[0.118 0.09 ... 1.  0.996] [0.439 0.306 ... 1.  1.  ] ... [0.063 0.067 ... 0.173 0.204] [0.063 0.067 ... 0.102 0.173]] [[0.11 0.145 ... 0.992 1.  ] [0.604 0.455 ... 1.  1.  ] ... [0.086 0.09 ... 0.22 0.259] [0.086 0.09 ... 0.145 0.22 ]]]) & (((-1 * N[0:-2](x_0))) <= [[-0.154]]) & (((1 * x_0)) <= 1) & (((-1 * x_0)) <= [[[-0.118 -0.161 ... -0.996 -1.  ] [-0.314 -0.192 ... -0.996 -0.992] ... [-0.043 -0.047 ... -0.149 -0.18 ] [-0.043 -0.047 ... -0.086 -0.157]] [[-0.118 -0.09 ... -1.  -0.996] [-0.439 -0.306 ... -1.  -1.  ] ... [-0.063 -0.067 ... -0.173 -0.204] [-0.063 -0.067 ... -0.102 -0.173]] [[-0.11 -0.145 ... -0.992 -1.  ] [-0.604 -0.455 ... -1.  -1.  ] ... [-0.086 -0.09 ... -0.22 -0.259] [-0.086 -0.09 ... -0.145 -0.22 ]]]))
Traceback (most recent call last):
  File "/net/bigtemp/ft8bn/DNNV/.venv/bin/dnnv", line 8, in <module>
    sys.exit(_main())
  File "/bigtemp/ft8bn/DNNV/dnnv/__main__.py", line 80, in _main
    return exit(main(*cli.parse_args()))
  File "/bigtemp/ft8bn/DNNV/dnnv/__main__.py", line 58, in main
    result, cex = verifier.verify(phi, **params)
  File "/bigtemp/ft8bn/DNNV/dnnv/verifiers/common/base.py", line 82, in verify
    return cls(phi, **kwargs).run()
  File "/bigtemp/ft8bn/DNNV/dnnv/verifiers/common/base.py", line 112, in run
    subproperty_result, cex = self.check(subproperty)
  File "/bigtemp/ft8bn/DNNV/dnnv/verifiers/common/base.py", line 86, in check
    executor_inputs = self.build_inputs(prop)
  File "/bigtemp/ft8bn/DNNV/dnnv/verifiers/neurify/__init__.py", line 35, in build_inputs
    translator_error=NeurifyTranslatorError,
  File "/bigtemp/ft8bn/DNNV/dnnv/verifiers/neurify/utils.py", line 180, in to_neurify_inputs
    input_file.write(f"{row_str},\n")
  File "/sw/centos/anaconda3/2019.10/lib/python3.7/tempfile.py", line 481, in func_wrapper
    return func(*args, **kwargs)
OSError: [Errno 28] No space left on device
