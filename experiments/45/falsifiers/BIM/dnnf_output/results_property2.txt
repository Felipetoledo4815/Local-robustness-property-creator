2021-05-11 09:03:54.882280: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2021-05-11 09:03:54.886157: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2599990000 Hz
2021-05-11 09:03:54.886716: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x563d525fdd20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2021-05-11 09:03:54.886736: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
WARNING:tensorflow:From /Data/PhD/Frameworks/DNNV/.venv/lib/python3.7/site-packages/cleverhans/utils_tf.py:341: The name tf.GraphKeys is deprecated. Please use tf.compat.v1.GraphKeys instead.

WARNING:tensorflow:From /Data/PhD/Frameworks/DNNV/.venv/lib/python3.7/site-packages/cleverhans/attacks/__init__.py:49: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From /Data/PhD/Frameworks/DNNV/.venv/lib/python3.7/site-packages/cleverhans/utils_tf.py:624: The name tf.assert_greater_equal is deprecated. Please use tf.compat.v1.assert_greater_equal instead.

WARNING:tensorflow:From /Data/PhD/Frameworks/DNNV/.venv/lib/python3.7/site-packages/cleverhans/utils_tf.py:615: The name tf.assert_less_equal is deprecated. Please use tf.compat.v1.assert_less_equal instead.

WARNING:tensorflow:From /Data/PhD/Frameworks/DNNV/.venv/lib/python3.7/site-packages/cleverhans/attacks/__init__.py:568: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.cast` instead.
WARNING:tensorflow:From /Data/PhD/Frameworks/DNNV/.venv/lib/python3.7/site-packages/cleverhans/compat.py:124: calling softmax_cross_entropy_with_logits_v2_helper (from tensorflow.python.ops.nn_ops) with dim is deprecated and will be removed in a future version.
Instructions for updating:
dim is deprecated, use axis instead
Falsifying: Forall(x_0, (((x_0 <= 1) & ([[[0.224 0.188 ... 0.941 0.973] [0.122 0.157 ... 0.906 1.  ] ... [0.078 0.09 ... 0.086 0.094] [0.082 0.082 ... 0.086 0.086]] [[0.22 0.122 ... 0.831 0.867] [0.169 0.173 ... 0.906 0.98 ] ... [0.125 0.133 ... 0.129 0.137] [0.125 0.125 ... 0.129 0.129]] [[0.224 0.176 ... 0.757 0.761] [0.192 0.22 ... 0.878 0.922] ... [0.196 0.204 ... 0.2  0.208] [0.196 0.196 ... 0.2  0.2 ]]] <= x_0) & (0 <= x_0) & (x_0 <= [[[0.224 0.188 ... 0.941 0.973] [0.122 0.157 ... 0.906 1.  ] ... [0.078 0.09 ... 0.086 0.094] [0.082 0.082 ... 0.086 0.086]] [[0.22 0.122 ... 0.831 0.867] [0.169 0.173 ... 0.906 0.98 ] ... [0.125 0.133 ... 0.129 0.137] [0.125 0.125 ... 0.129 0.129]] [[0.224 0.176 ... 0.757 0.761] [0.192 0.22 ... 0.878 0.922] ... [0.196 0.204 ... 0.2  0.208] [0.196 0.196 ... 0.2  0.2 ]]])) ==> ((N[0:-2](x_0) < numpy.tan(min(1.5707963267948966, ((N[0:]([[[[0.224 0.188 ... 0.941 0.973]  [0.122 0.157 ... 0.906 1.  ]  ...  [0.078 0.09 ... 0.086 0.094]  [0.082 0.082 ... 0.086 0.086]] [[0.22 0.122 ... 0.831 0.867]  [0.169 0.173 ... 0.906 0.98 ]  ...  [0.125 0.133 ... 0.129 0.137]  [0.125 0.125 ... 0.129 0.129]] [[0.224 0.176 ... 0.757 0.761]  [0.192 0.22 ... 0.878 0.922]  ...  [0.196 0.204 ... 0.2  0.208]  [0.196 0.196 ... 0.2  0.2 ]]]]) + ((3.141592653589793 * 45.0) / 180)) / 2)))) & (numpy.tan(max(-1.5707963267948966, ((N[0:]([[[[0.224 0.188 ... 0.941 0.973]  [0.122 0.157 ... 0.906 1.  ]  ...  [0.078 0.09 ... 0.086 0.094]  [0.082 0.082 ... 0.086 0.086]] [[0.22 0.122 ... 0.831 0.867]  [0.169 0.173 ... 0.906 0.98 ]  ...  [0.125 0.133 ... 0.129 0.137]  [0.125 0.125 ... 0.129 0.129]] [[0.224 0.176 ... 0.757 0.761]  [0.192 0.22 ... 0.878 0.922]  ...  [0.196 0.204 ... 0.2  0.208]  [0.196 0.196 ... 0.2  0.2 ]]]]) - ((3.141592653589793 * 45.0) / 180)) / 2))) < N[0:-2](x_0)))))

dnnf
  result: unknown
  falsification time: 1.6266
  total time: 7.8725
